#!/bin/bash

HOME_DIR='/home/grimoirelab'
CONF_DIR="$HOME_DIR/conf"

echo "Installing and checking GrimoireLab Release"
sudo grimoirelab/utils/build_grimoirelab --build --install --check --install_system --relfile $CONF_DIR/requirements.cfg -l debug

# This could be an ENV var probably
#REDIS="redis"

# arthur on
#arthurd -g -d redis://$REDIS/8 --es-index $ARTHUR_ELASTICSEARCH_INDEX --log-path /home/bitergia/logs/arthurd --no-cache
# Give time to arthur to create the raw index
#echo "Waiting for arthur startup completion ..."
#sleep 5
#echo "Starting two workers: collect and update tasks"
# Two workers
#(arthurw -g -d redis://$REDIS/8 > /home/bitergia/logs/worker-collect.log 2>&1) &
#(arthurw -g -d redis://$REDIS/8 update > /home/bitergia/logs/worker-update.log 2>&1) &

mkdir $HOME_DIR/mordred
ln -s $HOME_DIR/panels $HOME_DIR/mordred/panels
#ln -s $HOME_DIR/reports $HOME_DIR/mordred/reports

# Extracting the perceval cache
echo "Extracting the perceval cache data ..."
cd $CONF_DIR && tar xfz cache-test.tgz
ln -s $CONF_DIR/perceval-cache $HOME_DIR/.perceval

# Wait for Elasticsearch
echo "Waiting for elasticsearch startup completion ..."
until $(curl --output /dev/null --silent --head --fail http://172.17.0.1:9200); do
    printf '.'
    sleep 5
done
echo "Elasticsearch OK"
# Load raw data
echo "Loading initial raw data ..."
cd /home/grimoirelab/conf && ./init-raw.sh
# We need to wait also for Kibiter so the version can be collected
echo "Waiting for kibiter startup completion ..."
until $(curl --output /dev/null --silent --head --fail http://172.17.0.1:5601); do
    printf '.'
    sleep 5
done
echo "Kibiter OK"
cd $CONF_DIR
# Hack until the panels package is working
git clone https://github.com/grimoirelab/panels.git
mordred -c setup.cfg
